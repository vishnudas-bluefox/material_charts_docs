---
import DocsLayout from '../../layouts/DocsLayout.astro';
---

<DocsLayout title="Installation - Material Charts">
  <h1>Overview of Material Charts in Flutter</h1>
  
  <p><strong>Material Charts</strong> is a powerful and versatile Flutter package that provides a comprehensive suite of charting options, including Line Charts, Pie Charts, Bar Charts, CandleStick Charts, Gantt Charts, and more. Designed with a focus on customization, interactivity, and smooth animations, Material Charts stands out as a leading choice for developers looking to integrate visually appealing and functional data visualizations into their Flutter applications.</p>

  <h2>Key Features of Material Charts</h2>

  <ul>
    <li><strong>Diverse Chart Types:</strong> Material Charts supports a wide range of chart types, making it suitable for various data visualization needs. From simple bar and line charts to complex Gantt and candlestick charts, it covers a broad spectrum of use cases.</li>
    <li><strong>Customization:</strong> Each chart type comes with extensive customization options, allowing developers to tailor the appearance and behavior of charts to fit their application's design and user experience requirements. This includes customizable colors, labels, animations, and more.</li>
    <li><strong>Smooth Animations:</strong> Material Charts offers smooth animations that enhance user engagement and provide a more dynamic experience when interacting with data.</li>
    <li><strong>Real-Time Data Updates:</strong> The package supports real-time data updates, making it ideal for applications that require live data visualization, such as financial dashboards or monitoring systems.</li>
    <li><strong>Accessibility Support:</strong> Material Charts is designed with accessibility in mind, ensuring that charts are usable by all users, including those with disabilities.</li>
  </ul>

  <h2>Comparison with Other Popular Flutter Chart Libraries</h2>

  <p>While there are several charting libraries available for Flutter, such as <strong>fl_chart</strong>, <strong>charts_flutter</strong>, and <strong>syncfusion_flutter_charts</strong>, Material Charts distinguishes itself in several key areas:</p>

  <h3>1. Ease of Use</h3>
  <p><strong>Material Charts:</strong> Offers a straightforward API that simplifies the process of creating and customizing charts. The documentation is comprehensive, providing clear examples and usage guidelines.</p>
  <p><strong>Other Libraries:</strong> Some libraries may have steeper learning curves or require more boilerplate code to achieve similar results.</p>

  <h3>2. Customization Options</h3>
  <p><strong>Material Charts:</strong> Provides extensive customization options for each chart type, allowing developers to modify nearly every aspect of the charts, from colors to animations.</p>
  <p><strong>Other Libraries:</strong> While many libraries offer customization, they may not provide the same level of detail or flexibility as Material Charts.</p>

  <h3>3. Performance</h3>
  <p><strong>Material Charts:</strong> Optimized for performance, ensuring smooth rendering even with larger datasets. The animations are designed to be efficient, enhancing the user experience without compromising performance.</p>
  <p><strong>Other Libraries:</strong> Performance can vary significantly between libraries, with some struggling to handle larger datasets or complex animations.</p>

  <h3>4. Community and Support</h3>
  <p><strong>Material Charts:</strong> Actively maintained with a growing community of users and contributors. The support channels, including GitHub issues and email support, are responsive and helpful.</p>
  <p><strong>Other Libraries:</strong> Some libraries may have less active communities or slower response times for support.</p>

  <nav style="margin-top: 2rem; display: flex; justify-content: space-between;">
    <a href="/docs/installation" style="text-decoration: none; color: #228be6;">← Previous Page: Installation</a>
    <a href="/docs/charts/bar" style="text-decoration: none; color: #228be6;">Next Page: Bar Chart →</a>
  </nav>
</DocsLayout>

<style>
  h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
  }

  h2 {
    font-size: 1.8rem;
    margin: 2rem 0 1rem;
  }

  p {
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  pre {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 1rem 0;
  }

  code {
    font-family: 'Fira Code', monospace;
    font-size: 0.9rem;
  }

  ul {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  li {
    margin-bottom: 0.5rem;
  }

  a {
    color: #228be6;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }
</style>
