---
import DocsLayout from '../../../layouts/DocsLayout.astro';
---

<DocsLayout title="Bar Chart - Material Charts">
  <h1>Hollow Semi Circle/MeterChart</h1>

  <p>The Hollow Semi-Circle or Meter Chart in the <a href="https://pub.dev/packages/material_charts" >Material Charts Flutter package </a> is a striking visualization tool designed for developers who want to display progress or performance metrics in a visually engaging manner within their Flutter applications. This unique chart type effectively represents percentage values in a semi-circular format, making it easy for users to quickly assess progress towards a goal or target. With customizable colors, styles, and animation options, the Hollow Semi-Circle Chart enhances user interaction and provides a clear, intuitive understanding of data. Perfect for dashboards, fitness apps, or any application that requires effective data representation, this chart empowers developers to create a compelling user experience while effectively communicating key performance indicators.</p>

  <img src="https://raw.githubusercontent.com/vishnudas-bluefox/material_charts/refs/heads/master/images/hoolow_semi_circle.gif" alt="Bar Chart Example" class="example-image" />

  <h2>Usage</h2>

  <pre><code>import 'package:flutter/material.dart';
    import 'material_charts/hollow_semi_circle.dart';
    
    MaterialChartHollowSemiCircle(
      percentage: 75,
      size: 200,
      style: ChartStyle(
        activeColor: Colors.green,
        inactiveColor: Colors.grey.shade300,
        percentageStyle: TextStyle(fontSize: 24, color: Colors.black),
        animationDuration: Duration(milliseconds: 1000),
        animationCurve: Curves.fastOutSlowIn,
      ),
      onAnimationComplete: () &#123
        print('Animation Completed');
        &#125,
    );</code></pre>

    <h2>Properties</h2>

    <h3>Hollow Semi-Circle</h3>
    <table>
      <thead>
        <tr>
          <th>Property</th>
          <th>Type</th>
          <th>Description</th>
          <th>Default</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>percentage</td>
          <td>double</td>
          <td>The percentage value to display</td>
          <td>Required</td>
        </tr>
        <tr>
          <td>size</td>
          <td>double</td>
          <td>Diameter of the chart</td>
          <td>Required</td>
        </tr>
        <tr>
          <td>style</td>
          <td>ChartStyle</td>
          <td>Configuration for styling the chart</td>
          <td>ChartStyle()</td>
        </tr>
        <tr>
          <td>onAnimationComplete</td>
          <td>VoidCallback?</td>
          <td>Callback invoked after animation completes</td>
          <td>null</td>
        </tr>
      </tbody>
    </table>
    
    <h3>ChartStyle</h3>
    <table>
      <thead>
        <tr>
          <th>Property</th>
          <th>Type</th>
          <th>Description</th>
          <th>Default</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>activeColor</td>
          <td>Color</td>
          <td>Color for the active segment of the chart</td>
          <td>Colors.blue</td>
        </tr>
        <tr>
          <td>inactiveColor</td>
          <td>Color</td>
          <td>Color for the inactive portion</td>
          <td>Color(0xFFE0E0E0)</td>
        </tr>
        <tr>
          <td>textColor</td>
          <td>Color?</td>
          <td>Optional color for percentage text</td>
          <td>null</td>
        </tr>
        <tr>
          <td>percentageStyle</td>
          <td>TextStyle?</td>
          <td>Style for percentage text</td>
          <td>null</td>
        </tr>
        <tr>
          <td>legendStyle</td>
          <td>TextStyle?</td>
          <td>Style for the legend text</td>
          <td>null</td>
        </tr>
        <tr>
          <td>animationDuration</td>
          <td>Duration</td>
          <td>Duration of the animation</td>
          <td>Duration(milliseconds: 1500)</td>
        </tr>
        <tr>
          <td>animationCurve</td>
          <td>Curve</td>
          <td>Curve used for animation</td>
          <td>Curves.easeInOut</td>
        </tr>
        <tr>
          <td>showPercentageText</td>
          <td>bool</td>
          <td>Whether to show the percentage text</td>
          <td>true</td>
        </tr>
        <tr>
          <td>showLegend</td>
          <td>bool</td>
          <td>Whether to display a legend</td>
          <td>true</td>
        </tr>
        <tr>
          <td>percentageFormatter</td>
          <td>String Function(double)?</td>
          <td>Formatter for percentage text</td>
          <td>null</td>
        </tr>
        <tr>
          <td>legendFormatter</td>
          <td>String Function(String, double)?</td>
          <td>Formatter for legend entries</td>
          <td>null</td>
        </tr>
      </tbody>
    </table>

  <h2>Features</h2>
<ul>
    <li>üìä Percentage display</li>
    <li>üéØ Legend support</li>
    <li>üìè Adjustable hollow radius</li>
    <li>üé® Active/inactive segment styling</li>
    <li>üìù Custom formatters</li>
</ul>


  <h2>Examples</h2>

  <h3>Basic Bar Chart</h3>
  <pre><code>MaterialBarChart(
  data: [
    BarChartData(value: 30, label: 'A'),
    BarChartData(value: 70, label: 'B'),
    BarChartData(value: 50, label: 'C'),
  ],
  showGrid: true,
  showValues: true,
);</code></pre>

  <h3>Styled Bar Chart</h3>
  <pre><code>MaterialBarChart(
  data: [
    BarChartData(value: 30, label: 'A', color: Colors.blue),
    BarChartData(value: 70, label: 'B', color: Colors.green),
    BarChartData(value: 50, label: 'C', color: Colors.orange),
  ],
  style: BarChartStyle(
    gridColor: Colors.grey.shade200,
    backgroundColor: Colors.white,
    labelStyle: TextStyle(fontSize: 14, fontWeight: FontWeight.bold),
    valueStyle: TextStyle(fontSize: 12, color: Colors.grey),
    barSpacing: 0.4,
    cornerRadius: 8.0,
  ),
  showGrid: true,
  showValues: true,
);</code></pre>
</DocsLayout>

<style>
  h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
  }

  h2 {
    font-size: 1.8rem;
    margin: 2rem 0 1rem;
  }

  h3 {
    font-size: 1.4rem;
    margin: 1.5rem 0 1rem;
  }

  p {
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  .example-image {
    max-width: 100%;
    border-radius: 8px;
    margin: 2rem 0;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  pre {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 1rem 0;
  }

  code {
    font-family: 'Fira Code', monospace;
    font-size: 0.9rem;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin: 1rem 0;
  }

  th, td {
    padding: 0.75rem;
    text-align: left;
    border-bottom: 1px solid #dee2e6;
  }

  th {
    background: #f8f9fa;
    font-weight: 600;
  }

  ul {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  li {
    margin-bottom: 0.5rem;
  }

  a {
    color: #228be6;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }
</style>